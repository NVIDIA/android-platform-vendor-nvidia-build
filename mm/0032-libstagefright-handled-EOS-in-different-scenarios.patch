From d7fc263cb3903a4bf80fee3378a63b0ca0e08b30 Mon Sep 17 00:00:00 2001
From: manikanta kanamarlapudi <manikak@nvidia.com>
Date: Tue, 11 Sep 2012 16:44:10 +0530
Subject: [PATCH 32/40] libstagefright : handled EOS in different scenarios

- we don't require another variable to handle EOS if
  dynamic sampling rate change have.Removed extra variable
  and handled with mNumFramesPlayed

bug 1046269
bug 987909

Reviewed-on: http://git-master/r/131386
(cherry picked from commit a483be6397ab5d0d06dcf73d94d2042b80bfb327)

Change-Id: I63d18ce9454b6713b8b94df17d4a5eb039f1a668
---
 include/media/stagefright/AudioPlayer.h |    1 -
 media/libstagefright/AudioPlayer.cpp    |    6 ++----
 2 files changed, 2 insertions(+), 5 deletions(-)

diff --git a/include/media/stagefright/AudioPlayer.h b/include/media/stagefright/AudioPlayer.h
index 0ce7a54..d317699 100644
--- a/include/media/stagefright/AudioPlayer.h
+++ b/include/media/stagefright/AudioPlayer.h
@@ -88,7 +88,6 @@ private:
     Mutex mLock;
     int64_t mNumFramesPlayed;
     int64_t mNumFramesPlayedSysTimeUs;
-    int64_t mNumFramesPlayedInSegment;   // the frames present between consecutive port settings is considering as segment
 
     int64_t mPositionTimeMediaUs;
     int64_t mPositionTimeRealUs;
diff --git a/media/libstagefright/AudioPlayer.cpp b/media/libstagefright/AudioPlayer.cpp
index c702443..08af5ef 100644
--- a/media/libstagefright/AudioPlayer.cpp
+++ b/media/libstagefright/AudioPlayer.cpp
@@ -69,7 +69,6 @@ AudioPlayer::AudioPlayer(
       mFrameSize(0),
       mAudioFormat(AUDIO_FORMAT_PCM_16_BIT),
       mNumFramesPlayed(0),
-      mNumFramesPlayedInSegment(0),
       mNumFramesPlayedSysTimeUs(ALooper::GetNowUs()),
       mPositionTimeMediaUs(-1),
       mPositionTimeRealUs(-1),
@@ -417,7 +416,7 @@ uint32_t AudioPlayer::getNumFramesPendingPlayout() const {
     // mNumFramesPlayed is the number of frames submitted
     // to the audio sink for playback, but not all of them
     // may have played out by now.
-    return mNumFramesPlayedInSegment - numFramesPlayedOut;
+    return mNumFramesPlayed - numFramesPlayedOut;
 }
 
 void AudioPlayer::onPortSettingsChangedEvent() {
@@ -457,7 +456,7 @@ void AudioPlayer::onPortSettingsChangedEvent() {
     success = format->findInt32(kKeySampleRate, &mSampleRate);
     CHECK(success);
 
-    mNumFramesPlayedInSegment = 0;
+    mNumFramesPlayed = 0;
     int32_t numChannels, channelMask;
     success = format->findInt32(kKeyChannelCount, &numChannels);
     CHECK(success);
@@ -714,7 +713,6 @@ size_t AudioPlayer::fillBuffer(void *data, size_t size) {
     {
         Mutex::Autolock autoLock(mLock);
         mNumFramesPlayed += size_done / mFrameSize;
-        mNumFramesPlayedInSegment += size_done / mFrameSize;
         mNumFramesPlayedSysTimeUs = ALooper::GetNowUs();
 
         if (mReachedEOS) {
-- 
1.7.1

