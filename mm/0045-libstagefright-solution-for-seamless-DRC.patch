From 53ad08acb3b50082734c399746d0ad8621175cad Mon Sep 17 00:00:00 2001
From: Smita Gaikwad <smitag@nvidia.com>
Date: Tue, 6 Nov 2012 09:14:55 -0500
Subject: [PATCH] [libstagefright] : solution for seamless DRC

when ever there is a DRC for second time we are postponing the event
and clearing all the decoded buffers . Instead of that render all the
decoded buffers and then process the event

bug 987909

Reviewed-on: http://git-master/r/129302
(cherry picked from commit 43e0f7a103b38be0684b851b7a527e58c66a93e0)

Change-Id: Ie3cb8694311132f0cd26b17e4246ff9fab4ea1cd
---
 include/media/stagefright/OMXCodec.h   |    1 +
 media/libstagefright/AwesomePlayer.cpp |    4 ---
 media/libstagefright/OMXCodec.cpp      |   35 ++++++++++++++-----------------
 3 files changed, 17 insertions(+), 23 deletions(-)

diff --git a/include/media/stagefright/OMXCodec.h b/include/media/stagefright/OMXCodec.h
index 26f8c84..747074b 100644
--- a/include/media/stagefright/OMXCodec.h
+++ b/include/media/stagefright/OMXCodec.h
@@ -211,6 +211,7 @@ private:
     bool mBuffersWithRenderer;
     int32_t mPortSettingsEvent;
     int32_t mEventPortIndex;
+    bool mPortSettingsCompletionWait;
     sp<SkipCutBuffer> mSkipCutBuffer;
     int32_t mDisplayWidth;
     int32_t mDisplayHeight;
diff --git a/media/libstagefright/AwesomePlayer.cpp b/media/libstagefright/AwesomePlayer.cpp
index 21a4914..977b377 100644
--- a/media/libstagefright/AwesomePlayer.cpp
+++ b/media/libstagefright/AwesomePlayer.cpp
@@ -1953,10 +1953,6 @@ void AwesomePlayer::onVideoEvent() {
                 if (err == INFO_FORMAT_CHANGED) {
                     ALOGV("VideoSource signalled format change.");
 
-                    if (mVideoBuffer) {
-                        mVideoBuffer->release();
-                        mVideoBuffer = NULL;
-                    }
                     notifyVideoSize_l();
 
                     if (mVideoRenderer != NULL) {
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index 958fbc9..b96b4ae 100644
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -46,8 +46,6 @@
 #include "include/avc_utils.h"
 
 #define PORT_SETTINGS_DELAYED                   0X01
-#define PORT_SETTINGS_NOT_CHANGED               0x02
-#define DO_NOT_SEND_BUFFER                      0x04
 #define PROPERTY_VALUE_MAX                      92
 
 namespace android {
@@ -1415,10 +1413,13 @@ OMXCodec::OMXCodec(
       mSignalledEOS(false),
       mNoMoreOutputData(false),
       mOutputPortSettingsHaveChanged(false),
+      mPortSettingsCompletionWait(false),
       mBuffersWithRenderer(0),
       mPortSettingsEvent(0),
       mEventPortIndex(-1),
       mSeekTimeUs(-1),
+      mDisplayWidth(0),
+      mDisplayHeight(0),
       mSeekMode(ReadOptions::SEEK_CLOSEST_SYNC),
       mTargetTimeUs(-1),
       mOutputPortSettingsChangedPending(false),
@@ -2505,7 +2506,6 @@ void OMXCodec::onEvent(OMX_EVENTTYPE event, OMX_U32 data1, OMX_U32 data2) {
                 // the output buffers.
                 if (mBuffersWithRenderer == 1)
                 {
-                    mPortSettingsEvent = mPortSettingsEvent | DO_NOT_SEND_BUFFER;
                     mPortSettingsEvent = mPortSettingsEvent | PORT_SETTINGS_DELAYED;
                 }
                 onPortSettingsChanged(data1);
@@ -2639,7 +2639,11 @@ void OMXCodec::onCmdComplete(OMX_COMMANDTYPE cmd, OMX_U32 data) {
                     }
                 }
                 mBuffersWithRenderer = 0;
-                mPortSettingsEvent = (mPortSettingsEvent & ~(DO_NOT_SEND_BUFFER));
+
+                if (mPortSettingsCompletionWait == true) {
+                    mAsyncCompletion.signal();
+                    mPortSettingsCompletionWait = false;
+                }
             }
             break;
         }
@@ -4091,30 +4095,23 @@ status_t OMXCodec::read(
         }
     }
 
-    if((mPortSettingsEvent & PORT_SETTINGS_NOT_CHANGED) && (mBuffersWithRenderer == 1)) {
-        mPortSettingsEvent = (mPortSettingsEvent & ~(PORT_SETTINGS_NOT_CHANGED));
-        onPortSettingsChanged(mEventPortIndex);
-    }
-
-    if((mPortSettingsEvent & PORT_SETTINGS_DELAYED) && (mBuffersWithRenderer == 1)) {
-        mPortSettingsEvent = (mPortSettingsEvent | (PORT_SETTINGS_NOT_CHANGED));
+    if((mPortSettingsEvent & PORT_SETTINGS_DELAYED) && mFilledBuffers.empty()) {
         mPortSettingsEvent = (mPortSettingsEvent & ~(PORT_SETTINGS_DELAYED));
-        mFilledBuffers.clear();
-        return INFO_FORMAT_CHANGED;
-    }
-
-    if(mPortSettingsEvent & DO_NOT_SEND_BUFFER) {
-        mFilledBuffers.clear();
+        onPortSettingsChanged(mEventPortIndex);
+        mPortSettingsCompletionWait = true;
+        mAsyncCompletion.wait(mLock);
+        mOutputPortSettingsHaveChanged = false;
         return INFO_FORMAT_CHANGED;
     }
 
-    while (mState != ERROR && !mNoMoreOutputData && mFilledBuffers.empty()) {
+    while (mState != ERROR && !mNoMoreOutputData && mFilledBuffers.empty() &&
+            !(mPortSettingsEvent & PORT_SETTINGS_DELAYED)) {
         if ((err = waitForBufferFilled_l()) != OK) {
             return err;
         }
     }
 
-    if (mPortSettingsEvent & PORT_SETTINGS_DELAYED) {
+    if ((mPortSettingsEvent & PORT_SETTINGS_DELAYED) && mFilledBuffers.empty()) {
         return INFO_FORMAT_CHANGED;
     }
 
-- 
1.7.4.1

