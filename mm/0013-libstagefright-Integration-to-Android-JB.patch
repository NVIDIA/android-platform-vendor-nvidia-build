From 7b16e120e31acf14c221e2b8c254eb3ae4fa684a Mon Sep 17 00:00:00 2001
From: Yogesh Agrawal <yagrawal@nvidia.com>
Date: Wed, 20 Jun 2012 14:53:31 +0530
Subject: [PATCH 13/40] libstagefright: Integration to Android JB

o mp4writer track codecdataflag fix
o Fallback to software codecs for video playback
o Send seek complete notification for non-seekable
o Fixing the crash for unsupported content
o AAC ADTS header length fix

Following are the commits integrated:
http://git-master/r/#change,87999
http://git-master/r/#change,99410
http://git-master/r/#change,65828
http://git-master/r/#change,64725

Bug 991874

Change-Id: I11eb9235bdd4eac2dd47b95bfeafa6762f367b88
Reviewed-on: http://git-psac/r/288
Tested-by: Yogesh Agrawal <yagrawal@nvidia.com>
Reviewed-by: Yogesh Solanke <ysolanke@nvidia.com>
Reviewed-by: Zhijun He <zhhe@nvidia.com>
---
 media/libstagefright/AACExtractor.cpp  |    2 +-
 media/libstagefright/AwesomePlayer.cpp |   18 ++++++++++++++++++
 media/libstagefright/MPEG4Writer.cpp   |    1 -
 3 files changed, 19 insertions(+), 2 deletions(-)

diff --git a/media/libstagefright/AACExtractor.cpp b/media/libstagefright/AACExtractor.cpp
index 4d1072f..ad8a032 100644
--- a/media/libstagefright/AACExtractor.cpp
+++ b/media/libstagefright/AACExtractor.cpp
@@ -174,7 +174,7 @@ AACExtractor::AACExtractor(
     if (mDataSource->getSize(&streamSize) == OK) {
          while (offset < streamSize) {
             if ((frameSize = getAdtsFrameLength(source, offset, NULL)) == 0) {
-                return;
+                break;
             }
 
             mOffsetVector.push(offset);
diff --git a/media/libstagefright/AwesomePlayer.cpp b/media/libstagefright/AwesomePlayer.cpp
index 5c089d1..35c08be 100644
--- a/media/libstagefright/AwesomePlayer.cpp
+++ b/media/libstagefright/AwesomePlayer.cpp
@@ -367,6 +367,9 @@ status_t AwesomePlayer::setDataSource_l(const sp<MediaExtractor> &extractor) {
     for (size_t i = 0; i < extractor->countTracks(); ++i) {
         sp<MetaData> meta = extractor->getTrackMetaData(i);
 
+        if (meta == NULL)
+            continue;
+
         int32_t bitrate;
         if (!meta->findInt32(kKeyBitRate, &bitrate)) {
             const char *mime;
@@ -397,6 +400,9 @@ status_t AwesomePlayer::setDataSource_l(const sp<MediaExtractor> &extractor) {
     for (size_t i = 0; i < extractor->countTracks(); ++i) {
         sp<MetaData> meta = extractor->getTrackMetaData(i);
 
+        if (meta == NULL)
+            continue;
+
         const char *_mime;
         CHECK(meta->findCString(kKeyMIMEType, &_mime));
 
@@ -1307,6 +1313,7 @@ status_t AwesomePlayer::seekTo(int64_t timeUs) {
         Mutex::Autolock autoLock(mLock);
         return seekTo_l(timeUs);
     }
+    notifyListener_l(MEDIA_SEEK_COMPLETE);
 
     return OK;
 }
@@ -1502,6 +1509,17 @@ status_t AwesomePlayer::initVideoDecoder(uint32_t flags) {
             mVideoTrack,
             NULL, flags, USE_SURFACE_ALLOC ? mNativeWindow : NULL);
 
+    if(mVideoSource == NULL)
+    {
+        ALOGE("Creating HW decoder failed,fallback to SW decoder");
+        flags |= OMXCodec::kPreferSoftwareCodecs;
+        mVideoSource = OMXCodec::Create(
+            mClient.interface(), mVideoTrack->getFormat(),
+            false, // createEncoder
+            mVideoTrack,
+            NULL, flags, USE_SURFACE_ALLOC ? mNativeWindow : NULL);
+    }
+
     if (mVideoSource != NULL) {
         int64_t durationUs;
         if (mVideoTrack->getFormat()->findInt64(kKeyDuration, &durationUs)) {
diff --git a/media/libstagefright/MPEG4Writer.cpp b/media/libstagefright/MPEG4Writer.cpp
index 8b52e15..a19f2a7 100755
--- a/media/libstagefright/MPEG4Writer.cpp
+++ b/media/libstagefright/MPEG4Writer.cpp
@@ -2017,7 +2017,6 @@ status_t MPEG4Writer::Track::threadEntry() {
         int32_t isCodecConfig;
         if (buffer->meta_data()->findInt32(kKeyIsCodecConfig, &isCodecConfig)
                 && isCodecConfig) {
-            CHECK(!mGotAllCodecSpecificData);
 
             if (mIsAvc) {
                 status_t err = makeAVCCodecSpecificData(
-- 
1.7.1

