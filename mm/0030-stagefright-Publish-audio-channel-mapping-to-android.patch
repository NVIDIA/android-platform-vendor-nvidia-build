From 58226777461a4e3450c9f9752b8dd30a7e668fed Mon Sep 17 00:00:00 2001
From: Yogesh Agrawal <yagrawal@nvidia.com>
Date: Mon, 6 Aug 2012 19:27:50 +0530
Subject: [PATCH 30/40] stagefright: Publish audio channel mapping to android property

For Multichannel Support on JB, need to query the audio channel
mapping from decoder and publish it to android property
"media.tegra.out.channel.map"

Bug 1022356

Change-Id: Ib4eeeba6d790b24ae9c4427f65306c4f2a897844
---
 include/media/stagefright/AudioPlayer.h |    2 ++
 include/media/stagefright/MetaData.h    |    1 +
 media/libstagefright/AudioPlayer.cpp    |   31 +++++++++++++++++++++++++++++++
 media/libstagefright/OMXCodec.cpp       |   18 ++++++++++++++++++
 4 files changed, 52 insertions(+), 0 deletions(-)

diff --git a/include/media/stagefright/AudioPlayer.h b/include/media/stagefright/AudioPlayer.h
index 9504b54..d317699 100644
--- a/include/media/stagefright/AudioPlayer.h
+++ b/include/media/stagefright/AudioPlayer.h
@@ -27,6 +27,8 @@
 
 namespace android {
 
+static const char *kTegraAudioChannelMap = "media.tegra.out.channel.map";
+
 class MediaSource;
 class AudioTrack;
 class AwesomePlayer;
diff --git a/include/media/stagefright/MetaData.h b/include/media/stagefright/MetaData.h
index ecc49b9..2534416 100644
--- a/include/media/stagefright/MetaData.h
+++ b/include/media/stagefright/MetaData.h
@@ -44,6 +44,7 @@ enum {
     kKeyStride            = 'strd',  // int32_t
     kKeySliceHeight       = 'slht',  // int32_t
     kKeyChannelCount      = '#chn',  // int32_t
+    kKeyChannelType       = 'ctyp',  // raw data
     kKeyBitsPerSample     = 'abps',  // int32_t (audio bits per sample)
     kKeyChannelMask       = 'chnm',  // int32_t
     kKeySampleRate        = 'srte',  // int32_t (audio sampling rate Hz)
diff --git a/media/libstagefright/AudioPlayer.cpp b/media/libstagefright/AudioPlayer.cpp
index 2ca2b9d..cf7440b 100644
--- a/media/libstagefright/AudioPlayer.cpp
+++ b/media/libstagefright/AudioPlayer.cpp
@@ -30,6 +30,8 @@
 
 #include "include/AwesomePlayer.h"
 
+#include <cutils/properties.h>
+
 namespace android {
 
 struct AudioPlayerEvent : public TimedEventQueue::Event {
@@ -157,6 +159,21 @@ status_t AudioPlayer::start(bool sourceAlreadyStarted) {
     success = format->findInt32(kKeyChannelCount, &numChannels);
     CHECK(success);
 
+    uint32_t type;
+    const void *value = NULL;
+    size_t size;
+    int32_t status = 0;
+
+    success = format->findData(kKeyChannelType, &type, &value, &size);
+    if (success) {
+        status = property_set(kTegraAudioChannelMap, (char *)value);
+    } else {
+        status = property_set(kTegraAudioChannelMap, NULL);
+    }
+
+    if (status)
+        ALOGE("set property to media.tegra.out.channel.map fails with error - %d", status);
+
     if(!format->findInt32(kKeyChannelMask, &channelMask)) {
         // log only when there's a risk of ambiguity of channel mask selection
         ALOGI_IF(numChannels > 2,
@@ -406,6 +423,10 @@ void AudioPlayer::onPortSettingsChangedEvent() {
     status_t err = OK;
     sp<MetaData> format;
     bool success;
+    uint32_t type;
+    const void *value = NULL;
+    size_t size;
+    int32_t status = 0;
 
    ALOGV("onPortSettingsChangedEvent");
 
@@ -439,6 +460,16 @@ void AudioPlayer::onPortSettingsChangedEvent() {
     success = format->findInt32(kKeyChannelCount, &numChannels);
     CHECK(success);
 
+    success = format->findData(kKeyChannelType, &type, &value, &size);
+    if (success) {
+        status = property_set(kTegraAudioChannelMap, (char *)value);
+    } else {
+        status = property_set(kTegraAudioChannelMap, NULL);
+    }
+
+    if (status)
+        ALOGE("set property to media.tegra.out.channel.map fails with error - %d", status);
+
     if(!format->findInt32(kKeyChannelMask, &channelMask)) {
         // log only when there's a risk of ambiguity of channel mask selection
         ALOGI_IF(numChannels > 2,
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index 4eab0af..4b2c4e8 100644
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -48,9 +48,17 @@
 #define PORT_SETTINGS_DELAYED                   0X01
 #define PORT_SETTINGS_NOT_CHANGED               0x02
 #define DO_NOT_SEND_BUFFER                      0x04
+#define PROPERTY_VALUE_MAX                      92
 
 namespace android {
 
+static const char *AudioChannelMapping[] = {
+    "","LF","RF","CF",
+    "LS","RS","LFE",
+    "CS","LR","RR",
+    "TEGRA_AUDIO_CHANNEL_ID_LAST"
+};
+
 // Treat time out as an error if we have not received any output
 // buffers after 3 seconds.
 const static int64_t kBufferFilledEventTimeOutNs = 3000000000LL;
@@ -4569,6 +4577,16 @@ void OMXCodec::initOutputFormat(const sp<MetaData> &inputFormat) {
                             ? numChannels : params.nChannels);
 
                 mOutputFormat->setInt32(kKeySampleRate, params.nSamplingRate);
+
+                char value[PROPERTY_VALUE_MAX];
+                uint8_t offset = 0;
+                for(uint8_t i = 0;i < params.nChannels;i++)
+                {
+                     sprintf(&value[offset], "%s ", AudioChannelMapping[params.eChannelMapping[i]]);
+                     offset += strlen(AudioChannelMapping[params.eChannelMapping[i]]) + 1;
+                }
+                value[offset-1] = '\0';
+                mOutputFormat->setData(kKeyChannelType, 0, value, offset);
             } else if (audio_def->eEncoding == OMX_AUDIO_CodingAMR) {
                 OMX_AUDIO_PARAM_AMRTYPE amr;
                 InitOMXParams(&amr);
-- 
1.7.1

